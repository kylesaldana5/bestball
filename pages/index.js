import Head from "next/head";
import Image from "next/image";
import { css, styled } from "twin.macro";
import { CSVReader } from "react-papaparse";
import { useState } from "react";
import { ProjectInfo, ADPGrid, Modal, ExposureContainer } from "../components";
import { areEqual } from "../utils";

export default function Home() {
	const [csvADPGrid, setCsvADPGrid] = useState([]);
	const [csvUnderDogExposure, setCsvUnderDogExposure] = useState([]);
	console.log(
		"ðŸš€ ~ file: index.js ~ line 13 ~ Home ~ csvUnderDogExposure",
		csvUnderDogExposure
	);
	const [isModalOpen, setModalOpen] = useState(false);
	const [wrongCsvType, setWrongCsvType] = useState(false);

	// handle csv upload for adp grid
	const handleOnDropADPGrid = (data) => {
		// default underdog csv adp header
		let underDogHeader = [
			"id",
			"firstName",
			"lastName",
			"adp",
			"projectedPoints",
			"slotName",
			"teamName",
			"lineupStatus",
			"byeWeek",
		];
		// check if the csv header matches the same one as the underdog
		if (areEqual(data[0].data, underDogHeader)) {
			// remove header
			let removeHeader = data.slice(1);
			// set the csv
			setCsvADPGrid(removeHeader);
		} else {
			setModalOpen(true);
			setWrongCsvType(true);
		}
	};

	// handle csv upload for underdog exposure
	const handleOnDropUnderDogExposure = (data) => {
		let underDogHeaderExposure = [
			"Picked At",
			"Pick Number",
			"Appearance",
			"First Name",
			"Last Name",
			"Team",
			"Position",
			"Draft",
			"Draft Entry",
			"Draft Entry Fee",
			"Draft Size",
			"Draft Total Prizes",
			"Tournament Title",
			"Tournament",
			"Tournament Entry Fee",
			"Tournament Total Prizes",
			"Tournament Size",
			"Draft Pool Title",
			"Draft Pool",
			"Draft Pool Entry Fee",
			"Draft Pool Total Prizes",
			"Draft Pool Size",
		];
		if (areEqual(data[0].data, underDogHeaderExposure)) {
			// remove header
			let removeHeader = data.slice(1);
			// set the csv
			setCsvUnderDogExposure(data);
		} else {
			setModalOpen(true);
			setWrongCsvType(true);
		}
	};

	const handleOnError = (err, file, inputElem, reason) => {
		console.log(err);
	};

	const handleOnRemoveFile = (data) => {
		setWrongCsvType(false);
		setCsvADPGrid([]);
		setCsvUnderDogExposure([]);
	};

	return (
		// if the csv grid is set fit content
		<Container csvADPGrid={csvADPGrid}>
			<Head>
				<title>Create Next App</title>
				<meta name="description" content="Generated by create next app" />
				<link rel="icon" href="/favicon.ico" />
				<link rel="preconnect" href="https://fonts.googleapis.com" />
				<link rel="preconnect" href="https://fonts.gstatic.com" />
				<link
					href="https://fonts.googleapis.com/css2?family=Caveat&display=swap"
					rel="stylesheet"
				/>
				<link
					href="https://fonts.googleapis.com/css2?family=Space+Mono:wght@700&display=swap"
					rel="stylesheet"
				/>
			</Head>

			<main tw="flex flex-col">
				<div>
					<div
						tw="flex justify-end pr-7 py-5"
						onClick={() => setModalOpen(true)}
					>
						<p
							tw="cursor-pointer text-xl text-indigo-400"
							css={[
								css`
									font-family: "Caveat", cursive; ;
								`,
							]}
						>
							What does this project do?
						</p>
					</div>
					<div tw="flex items-center justify-evenly">
						<div>
							<div tw="flex flex-col justify-center items-center pt-16">
								<h1
									tw="text-blue-300 text-3xl "
									css={[
										css`
											font-family: "Space Mono", monospace;
										`,
									]}
								>
									BestBall ADP Grid
								</h1>
								<p tw="text-white font-sans">
									Load your Underdog ADP ranks here ðŸ‘‡
								</p>
							</div>
							<div tw="w-full">
								{/* csv uploads for bestball adp and exposure */}
								<div tw="py-3.5 flex justify-center items-center">
									<CSVReader
										onDrop={handleOnDropADPGrid}
										onError={handleOnError}
										noClick
										addRemoveButton
										onRemoveFile={handleOnRemoveFile}
									>
										<span tw="font-sans text-white">
											Drop CSV file here to upload.
										</span>
									</CSVReader>
								</div>
							</div>
						</div>
					</div>

					{/* grid of adp csv */}
					<ADPGrid csv={csvADPGrid} />

					{/* layout of exposures */}
					<ExposureContainer csv={csvUnderDogExposure} />

					{/* Modal explaining what this project does */}
					{/* This is trigged from clicking in the top right as well as if the wrong csv is uploaded */}
					<Modal
						isOpen={isModalOpen}
						setIsOpen={() => setModalOpen(false)}
					>
						<ProjectInfo />
					</Modal>
				</div>
			</main>
		</Container>
	);
}

const Container = styled.div`
	height: 100%;
	min-height: 100vh;
	width: 100%;
	background: radial-gradient(ellipse at center, #192d38 0, #211f2f 100%);

	@media (max-width: 1200px) {
		width: ${(props) =>
			props.csvADPGrid.length > 0 ? "fit-content" : "100%"};
	}
`;
